#define F_CPU 16000000UL
#include <avr/io.h>
#include <util/delay.h>

// TB6612 PORTB (Y-axis)
#define AIN1y PB0
#define AIN2y PB1
#define PWMAy PB2
#define BIN1y PB3
#define BIN2y PB4
#define PWMBy PB5

// TB6612 PORTD (X-axis)
#define AIN1x PD0
#define AIN2x PD1
#define PWMAx PD2
#define BIN1x PD3
#define BIN2x PD4
#define PWMBx PD5

// Full-step sequence for Y motor (on PORTB)
const uint8_t fullstep_sequence_y[4] = {
    (1 << AIN1y) | (1 << BIN1y),
    (1 << AIN2y) | (1 << BIN1y),
    (1 << AIN2y) | (1 << BIN2y),
    (1 << AIN1y) | (1 << BIN2y)
};

// Full-step sequence for X motor (on PORTD)
const uint8_t fullstep_sequence_x[4] = {
    (1 << AIN1x) | (1 << BIN1x),
    (1 << AIN2x) | (1 << BIN1x),
    (1 << AIN2x) | (1 << BIN2x),
    (1 << AIN1x) | (1 << BIN2x)
};

void init_pins_y() {
    DDRB |= (1 << AIN1y) | (1 << AIN2y) | (1 << PWMAy) |
            (1 << BIN1y) | (1 << BIN2y) | (1 << PWMBy);
}

void init_pins_x() {
    DDRD |= (1 << AIN1x) | (1 << AIN2x) | (1 << PWMAx) |
            (1 << BIN1x) | (1 << BIN2x) | (1 << PWMBx);
}

void step_motor_y(uint8_t step) {
    uint8_t bits_y = fullstep_sequence_y[step % 4];
    PORTB &= ~((1 << AIN1y) | (1 << AIN2y) | (1 << BIN1y) | (1 << BIN2y));
    PORTB |= bits_y;
    PORTB |= (1 << PWMAy) | (1 << PWMBy);
}

void step_motor_x(uint8_t step) {
    uint8_t bits_x = fullstep_sequence_x[step % 4];
    PORTD &= ~((1 << AIN1x) | (1 << AIN2x) | (1 << BIN1x) | (1 << BIN2x));
    PORTD |= bits_x;
    PORTD |= (1 << PWMAx) | (1 << PWMBx);
}

int main(void) {
    init_pins_y();
    init_pins_x();

    uint8_t stepy = 0;
    uint8_t stepx = 0;

    while (1) {
        for (int i = 0; i < 10; i++) {
            step_motor_y(stepy++);
            step_motor_x(stepx++);
            _delay_ms(10000);  // Change delay for speed
        }

        for (int j = 0; j < 10; j++) {
            step_motor_y(stepy--);
            step_motor_x(stepx--);
            _delay_ms(10000);
        }
    }

    return 0;
}
